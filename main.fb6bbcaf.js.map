{"version":3,"sources":["js/main.js"],"names":["board","me","computer","boxes","spots","document","querySelectorAll","replayBtn","querySelector","outputArea","initializeApp","style","display","Array","from","keys","for","i","length","innerText","removeProperty","addEventListener","turnClick","square","target","id","turn","checkWin","checkTie","bestSpot","squareId","player","getElementById","gameWon","gameOver","plays","reduce","a","e","concat","entries","index","win","every","elem","indexOf","backgroundColor","removeEventListener","declareWinner","who","emptySquares","filter","s","minimax","newBoard","availSpots","score","moves","move","result","push","bestMove","bestScore"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..\\src","sourcesContent":["let board;\r\nconst me = 'o';\r\nconst computer = 'x';\r\nconst boxes = [\r\n\t[0, 1, 2],\r\n\t[3, 4, 5],\r\n\t[6, 7, 8],\r\n\t[0, 3, 6],\r\n\t[1, 4, 7],\r\n\t[2, 5, 8],\r\n\t[0, 4, 8],\r\n\t[6, 4, 2]\r\n]\r\n\r\nconst spots = document.querySelectorAll('.box');\r\nconst replayBtn=document.querySelector('#replay');\r\nconst outputArea=document.querySelector(\".result\");\r\ninitializeApp();\r\n\r\n\r\nfunction initializeApp() {\r\n\treplayBtn.style.display = \"none\";\r\n\toutputArea.style.display = \"none\";\r\n\tboard = Array.from(Array(9).keys());\r\n\tspots.for\r\n\tfor (let i = 0; i < spots.length; i++) {\r\n\t\tspots[i].innerText = '';\r\n\t\tspots[i].style.removeProperty('background-color');\r\n\t\tspots[i].addEventListener('click', turnClick, false);\r\n\t}\r\n}\r\n\r\nfunction turnClick(square) {\r\n\tif (typeof board[square.target.id] == 'number') {\r\n\t\tturn(square.target.id, me)\r\n\t\tif (!checkWin(board, me) && !checkTie()) turn(bestSpot(), computer);\r\n\t}\r\n}\r\n\r\nconst turn=(squareId, player)=> {\r\n\tboard[squareId] = player;\r\n\tdocument.getElementById(squareId).innerText = player;\r\n\tlet gameWon = checkWin(board, player)\r\n\tif (gameWon) gameOver(gameWon)\r\n}\r\n\r\nconst checkWin=(board, player)=> {\r\n\tlet plays = board.reduce((a, e, i) =>\r\n\t\t(e === player) ? a.concat(i) : a, []);\r\n\tlet gameWon = null;\r\n\tfor (let [index, win] of boxes.entries()) {\r\n\t\tif (win.every(elem => plays.indexOf(elem) > -1)) {\r\n\t\t\tgameWon = {index: index, player: player};\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn gameWon;\r\n}\r\n\r\nconst gameOver=gameWon=> {\r\n\tfor (let index of boxes[gameWon.index]) {\r\n\t\tdocument.getElementById(index).style.backgroundColor =\r\n\t\t\tgameWon.player == me ? \"blue\" : \"red\";\r\n\t}\r\n\tfor (let i = 0; i < spots.length; i++) {\r\n\t\tspots[i].removeEventListener('click', turnClick, false);\r\n\t}\r\n\r\n\t\r\n\tdeclareWinner(gameWon.player == me ? \"You win!\" : \"You lose.\");\r\n\treplayBtn.style.display = \"block\";\r\n\t\r\n    replayBtn.addEventListener('click',initializeApp);\r\n}\r\n\r\nconst declareWinner=who=> {\r\n\toutputArea.style.display = \"block\";\r\n\tdocument.querySelector(\".result .text\").innerText = who;\r\n}\r\n\r\nconst emptySquares=()=> {\r\n\treturn board.filter(s => typeof s == 'number');\r\n}\r\n\r\nconst bestSpot=()=> {\r\n\treturn minimax(board, computer).index;\r\n}\r\n\r\nconst checkTie=()=> {\r\n\tif (emptySquares().length == 0) {\r\n\t\tfor (let i = 0; i < spots.length; i++) {\r\n\t\t\tspots[i].style.backgroundColor = \"green\";\r\n\t\t\tspots[i].removeEventListener('click', turnClick, false);\r\n\t\t}\r\n\t\tdeclareWinner(\"Tie Game!\")\r\n\t\t\r\n\treplayBtn.style.display = \"block\";\r\n\t\r\nreplayBtn.addEventListener('click',initializeApp);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nconst minimax=(newBoard, player)=> {\r\n\tlet availSpots = emptySquares();\r\n\r\n\tif (checkWin(newBoard, me)) {\r\n\t\treturn {score: -10};\r\n\t} else if (checkWin(newBoard, computer)) {\r\n\t\treturn {score: 10};\r\n\t} else if (availSpots.length === 0) {\r\n\t\treturn {score: 0};\r\n\t}\r\n\tlet moves = [];\r\n\tfor (let i = 0; i < availSpots.length; i++) {\r\n\t\tlet move = {};\r\n\t\tmove.index = newBoard[availSpots[i]];\r\n\t\tnewBoard[availSpots[i]] = player;\r\n\r\n\t\tif (player == computer) {\r\n\t\t\tlet result = minimax(newBoard, me);\r\n\t\t\tmove.score = result.score;\r\n\t\t} else {\r\n\t\t\tlet result = minimax(newBoard, computer);\r\n\t\t\tmove.score = result.score;\r\n\t\t}\r\n\r\n\t\tnewBoard[availSpots[i]] = move.index;\r\n\r\n\t\tmoves.push(move);\r\n\t}\r\n\r\n\tlet bestMove;\r\n\tif(player === computer) {\r\n\t\tlet bestScore = -10000;\r\n\t\tfor(let i = 0; i < moves.length; i++) {\r\n\t\t\tif (moves[i].score > bestScore) {\r\n\t\t\t\tbestScore = moves[i].score;\r\n\t\t\t\tbestMove = i;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tlet bestScore = 10000;\r\n\t\tfor(let i = 0; i < moves.length; i++) {\r\n\t\t\tif (moves[i].score < bestScore) {\r\n\t\t\t\tbestScore = moves[i].score;\r\n\t\t\t\tbestMove = i;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn moves[bestMove];\r\n}"]}